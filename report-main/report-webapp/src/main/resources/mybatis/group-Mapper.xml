<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="group" >
	
  <resultMap id="groupResultMap" type="com.sypay.omp.per.domain.Group" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="GROUP_CODE" property="groupCode" jdbcType="VARCHAR" />
    <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
    <result column="GROUP_TYPE" property="groupType" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATER_ID" property="createrId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.sypay.omp.per.model.GroupModel" id="groupModelResultMap">
  	<result column="id" property="id" jdbcType="VARCHAR" />
  	<result column="group_code" property="groupCode" jdbcType="VARCHAR" />
  	<result column="group_name" property="groupName" jdbcType="VARCHAR" />
  	<result column="status" property="status" jdbcType="INTEGER" />
  	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  	<result column="creater_acc_no" property="createrAccNo" jdbcType="VARCHAR" />
  	<result column="modifier_acc_no" property="modifierAccNo" jdbcType="VARCHAR" />
  </resultMap>

  <select id="findAllGroups" resultMap="groupResultMap">
  	select * from uc_group
  </select>

  <select id="queryGroupByRoles" resultType="String" parameterType="java.util.Map">
		 SELECT ug.group_code
		  FROM  uc_group ug,
		       		 uc_group_role ugr
		 WHERE ug.group_code = ugr.group_code
		       AND NOT EXISTS (SELECT *
		                         FROM (SELECT grole.role_code
		                                 FROM member m,
		                                      uc_member_group mgr,
		                                      uc_group_role grole
		                                WHERE mgr.group_code = grole.group_code
		                                      AND m.id = mgr.member_id
		                                      AND grole.role_code != #{sourceRoleCode, jdbcType=NUMERIC}
		                                      AND m.id =  #{memberId, jdbcType=NUMERIC}
		                               UNION
		                               SELECT #{targetRoleCode, jdbcType=NUMERIC}
		                                 FROM dual) nn
		                        WHERE ugr.role_code != nn.role_code) 
		
  </select>
  <select id="findGroupdByPage4SysAdmin" resultMap="groupModelResultMap" parameterType="map">
	select 
		g.id,
		g.group_code,
		g.group_name,
		g.status,
		to_char(g.create_time, 'yyyy-mm-dd hh24:mi:ss') create_time,
		to_char(g.update_time, 'yyyy-mm-dd hh24:mi:ss') update_time,
		(select t.acc_no from uc_member t where t.id = g.creater_id) creater_acc_no,
		(select t.acc_no from uc_member t where t.id = g.modifier_id) modifier_acc_no
	from
		uc_group g
		where 1=1
		<include refid="group_list_where_clause"/>
	order by
		<choose>
			<when test="sort == null">
				g.status desc,
				g.id desc
			</when>
			<otherwise>
			    g.${sort} ${order}
			</otherwise>
		</choose>
  </select>
  
   <select id="countForGroupList" resultType="long" parameterType="map">
  	SELECT count(*) FROM uc_group g where 1=1
  	<include refid="group_list_where_clause"/>
  </select>
  
  <sql id="group_list_where_clause">
  	<if test="currentMemberGroupCode != null and currentMemberGroupCode !=''">
  		and group_code = #{currentMemberGroupCode}
  	</if>
  	<if test="groupCode != null and groupCode !=''">
  		and group_code like '%'||#{groupCode}||'%'
  	</if>
  	<if test="groupName != null and groupName != ''">
  		and group_name like '%'||#{groupName}||'%'
  	</if>
  	<if test="status != null">
  		and status = #{status}
  	</if>
  </sql>
  
  <select id="findGroupNames4SysAdmin" resultType="map">
  	SELECT 
  		g.group_code "groupCode",
  		g.group_name "groupName" 
  	FROM
  		uc_group g 
  	WHERE 
  		g.status = 1
  </select>
  
  <select id="getGroupByGroupCode" parameterType="string" resultType="com.sypay.omp.per.domain.Group">
  	select 
        g.id "id",
        g.group_code "groupCode",
        g.group_name "groupName",
        g.status "status",
        g.group_type "groupType",
        g.create_time "createTime",
        g.update_time "updateTime"
	from
	    uc_group g
	where
	    g.group_code = #{groupCode}
  </select>
  
  <update id="updateGroupCodeByMemberId" parameterType="map">
  	update
  		uc_member_group 
  	set 
  		group_code = #{groupCode,jdbcType=VARCHAR},
  		update_time = #{updateTime,jdbcType=TIMESTAMP} 
  	where 
  		member_id = #{memberId,jdbcType=INTEGER}
  </update>
  
  <update id="deleteGroupLogically" parameterType="long">
  	update uc_group g set g.status = 0 where g.id = #{id,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteGroupPhysically" parameterType="long">
  	delete from uc_group g where g.id = #{id,jdbcType=INTEGER}
  </delete>
  
  <select id="countMemberByGroupCode" parameterType="string" resultType="int">
  	select count(*) from uc_member_group mg where mg.group_code = #{groupCode,jdbcType=VARCHAR}
  </select>
  
  <select id="countRolebyGroupCode" parameterType="string" resultType="int">
  	select count(*) from uc_group_role t where t.group_code = #{groupCode,jdbcType=VARCHAR}
  </select>
  
  <select id="countGroupByGroupCode" parameterType="string" resultType="int">
  	select count(*) from uc_group g
  	where g.group_code = #{groupCode,jdbcType=VARCHAR}
  	<if test="groupId != null">
  		and g.id != #{groupId}	
  	</if>
  </select>
  
  <select id="countGroupByMemberId" parameterType="long" resultType="int">
  	select count(*) from uc_member_group mg where mg.member_id = #{memberId}
  </select>
  
  <insert id="addMappingGroup2Member" parameterType="com.sypay.omp.per.domain.MemberGroup">
  	insert into uc_member_group(id, member_id, group_code, status, create_time, update_time)
  	values(seq_member_group.nextval, #{memberId,jdbcType=INTEGER}, #{groupCode,jdbcType=VARCHAR}, 1, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <select id="getGroupCodeByMemberId" parameterType="long" resultType="string">
  	select ug.group_code from uc_group ug, uc_member_group umg 
  	where ug.group_code = umg.group_code  and umg.member_id=#{memberId}
  </select>
  
  <select id="isSameGroupCode" parameterType="map" resultType="int">
  	select
  		count(*)
	from
		uc_group g
	where
		g.id = #{groupId,jdbcType=INTEGER}
    	and g.group_code = #{groupCode,jdbcType=VARCHAR}
  </select>
</mapper>